AWSTemplateFormatVersion: '2010-09-09'

Transform: AWS::Serverless-2016-10-31

Description: hlb-yt-dlp

Globals:
  Function:
    Timeout: 300
    MemorySize: 128
    Runtime: python3.10
    Architectures:
      - x86_64
    Layers:
      - !Ref Layerytdlp

Parameters:
  Environment:
    Type: String
    Default: dev

Resources:
  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub hlb-yt-dlp-${Environment}
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true

# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html
  Queue:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 300

  QueueContainer:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 300

# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html
  Table:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST
      DeletionProtectionEnabled: false
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      AttributeDefinitions:
        -
          AttributeName: "id"
          AttributeType: "S"
        -
          AttributeName: "uploader_id"
          AttributeType: "S"
      KeySchema:
        -
          AttributeName: "id"
          KeyType: "HASH"
        -
          AttributeName: "uploader_id"
          KeyType: "RANGE"

# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html
  TableChannels:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST
      DeletionProtectionEnabled: false
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      AttributeDefinitions:
        -
          AttributeName: "id"
          AttributeType: "S"
      KeySchema:
        -
          AttributeName: "id"
          KeyType: "HASH"

# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-layerversion.html
  Layerytdlp:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: hlb-yt-dlp
      Description: hlb-yt-dlp
      ContentUri: ../../layers/yt-dlp
      CompatibleRuntimes:
        - python3.10
        - python3.11
    Metadata:
      BuildMethod: python3.10

  # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
  FunctionQueue:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../../code/
      Handler: func_queue.handler
      MemorySize: 1024
      Events:
        Queue:
          Type: SQS
          Properties:
            Queue: !GetAtt Queue.Arn
      Environment:
        Variables:
          TABLE_NAME: !Ref Table
          QUEUE_URL: !Ref Queue
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref Table

# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
  FunctionRead:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../../code/
      Handler: func_read.handler
      Environment:
        Variables:
          TABLE_NAME: !Ref Table
          QUEUE_URL: !Ref Queue
          QUEUE_URL_CONTAINER: !Ref QueueContainer
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref Table
        - SQSSendMessagePolicy:
            QueueName: !GetAtt Queue.QueueName
        - SQSSendMessagePolicy:
            QueueName: !GetAtt QueueContainer.QueueName
        - Statement:
            - Effect: Allow
              Action:
                - batch:SubmitJob
              Resource: '*'

  FunctionAPI:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../../code/
      Handler: api.lambda_handler
      MemorySize: 1024
      Environment:
        Variables:
          TABLE_NAME: !Ref Table
          TABLE_CHANNELS: !Ref TableChannels
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref Table
        - DynamoDBCrudPolicy:
            TableName: !Ref TableChannels
      Events:
        Api:
          Type: Api
          Properties:
            Path: /
            Method: get
        Post:
          Type: Api
          Properties:
            Path: /
            Method: post

  FunctionWebsite:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../../code/
      Handler: website.lambda_handler
      MemorySize: 1024
      Environment:
        Variables:
          TABLE_NAME: !Ref Table
          API_URL: dc7n6ou61h
      Events:
        Api:
          Type: Api
          Properties:
            Path: /website
            Method: get

Outputs:
  Api:
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
